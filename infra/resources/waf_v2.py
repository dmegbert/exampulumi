import pulumi
import pulumi_aws as aws

from config import prefix, us_east_1

# PULUMI CHEAT CODE -- IMPORT AFTER CLICK OPS
aws_managed_rules_acl = aws.wafv2.WebAcl(
    f"{prefix}-aws-managed-rules-acl",
    opts=pulumi.ResourceOptions(provider=us_east_1),
    default_action=aws.wafv2.WebAclDefaultActionArgs(
        allow=aws.wafv2.WebAclDefaultActionAllowArgs(),
    ),
    description="AWS Managed Rules ACL",
    name=f"{prefix}-aws-managed-rules-acl",
    rules=[
        aws.wafv2.WebAclRuleArgs(
            name="AWS-AWSManagedRulesSQLiRuleSet",
            priority=3,
            override_action=aws.wafv2.WebAclRuleOverrideActionArgs(
                count=aws.wafv2.WebAclRuleOverrideActionCountArgs(),
            ),
            statement=aws.wafv2.WebAclRuleStatementArgs(
                managed_rule_group_statement=aws.wafv2.WebAclRuleStatementManagedRuleGroupStatementArgs(
                    name="AWSManagedRulesSQLiRuleSet",
                    vendor_name="AWS",
                ),
            ),
            visibility_config=aws.wafv2.WebAclRuleVisibilityConfigArgs(
                cloudwatch_metrics_enabled=True,
                metric_name="AWS-AWSManagedRulesSQLiRuleSet",
                sampled_requests_enabled=True,
            ),
        ),
        aws.wafv2.WebAclRuleArgs(
            name="AWS-AWSManagedRulesKnownBadInputsRuleSet",
            priority=2,
            override_action=aws.wafv2.WebAclRuleOverrideActionArgs(
                count=aws.wafv2.WebAclRuleOverrideActionCountArgs(),
            ),
            statement=aws.wafv2.WebAclRuleStatementArgs(
                managed_rule_group_statement=aws.wafv2.WebAclRuleStatementManagedRuleGroupStatementArgs(
                    name="AWSManagedRulesKnownBadInputsRuleSet",
                    vendor_name="AWS",
                ),
            ),
            visibility_config=aws.wafv2.WebAclRuleVisibilityConfigArgs(
                cloudwatch_metrics_enabled=True,
                metric_name="AWS-AWSManagedRulesKnownBadInputsRuleSet",
                sampled_requests_enabled=True,
            ),
        ),
        aws.wafv2.WebAclRuleArgs(
            name="AWS-AWSManagedRulesCommonRuleSet",
            priority=1,
            override_action=aws.wafv2.WebAclRuleOverrideActionArgs(
                count=aws.wafv2.WebAclRuleOverrideActionCountArgs(),
            ),
            statement=aws.wafv2.WebAclRuleStatementArgs(
                managed_rule_group_statement=aws.wafv2.WebAclRuleStatementManagedRuleGroupStatementArgs(
                    name="AWSManagedRulesCommonRuleSet",
                    vendor_name="AWS",
                ),
            ),
            visibility_config=aws.wafv2.WebAclRuleVisibilityConfigArgs(
                cloudwatch_metrics_enabled=True,
                metric_name="AWS-AWSManagedRulesCommonRuleSet",
                sampled_requests_enabled=True,
            ),
        ),
        aws.wafv2.WebAclRuleArgs(
            name="AWS-AWSManagedRulesAmazonIpReputationList",
            priority=0,
            override_action=aws.wafv2.WebAclRuleOverrideActionArgs(
                count=aws.wafv2.WebAclRuleOverrideActionCountArgs(),
            ),
            statement=aws.wafv2.WebAclRuleStatementArgs(
                managed_rule_group_statement=aws.wafv2.WebAclRuleStatementManagedRuleGroupStatementArgs(
                    name="AWSManagedRulesAmazonIpReputationList",
                    vendor_name="AWS",
                ),
            ),
            visibility_config=aws.wafv2.WebAclRuleVisibilityConfigArgs(
                cloudwatch_metrics_enabled=True,
                metric_name="AWS-AWSManagedRulesAmazonIpReputationList",
                sampled_requests_enabled=True,
            ),
        ),
    ],
    scope="CLOUDFRONT",
    visibility_config=aws.wafv2.WebAclVisibilityConfigArgs(
        cloudwatch_metrics_enabled=True,
        metric_name=f"{prefix}-aws-managed-rules-acl-metric",
        sampled_requests_enabled=True,
    ),
)
